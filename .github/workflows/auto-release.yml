name: Auto Release

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    name: Create Release Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        
      - name: Prepare release package
        run: |
          # Create temp directory
          mkdir -p release-temp
          
          # Copy all files except excluded ones
          rsync -av \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='vendor' \
            --exclude='vendor/' \
            --exclude='node_modules' \
            --exclude='.env' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/cache/*' \
            --exclude='storage/framework/sessions/*' \
            --exclude='storage/framework/views/*' \
            --exclude='public/storage' \
            --exclude='*.tar.gz' \
            --exclude='*.zip' \
            --exclude='extract-vendor.sh' \
            --exclude='CPANEL_SETUP.md' \
            ./ release-temp/ || true
          
          # Create storage structure (empty folders)
          mkdir -p release-temp/storage/app/public
          mkdir -p release-temp/storage/framework/cache
          mkdir -p release-temp/storage/framework/sessions
          mkdir -p release-temp/storage/framework/views
          mkdir -p release-temp/storage/logs
          touch release-temp/storage/logs/.gitkeep
          
          # Create latest-update.zip
          cd release-temp
          zip -r ../latest-update.zip . -x "*.git*" -x "vendor/*"
          cd ..
          
          # Get file size
          SIZE=$(du -h latest-update.zip | cut -f1)
          echo "Package size: $SIZE"
          echo "package_size=$SIZE" >> $GITHUB_ENV
          
      - name: Delete existing latest release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
        continue-on-error: true
        
      - name: Create/Update latest release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest Update
          body: |
            ## üöÄ Auto Release - Latest Update
            
            **Date:** ${{ steps.date.outputs.date }}
            **Commit:** ${{ github.sha }}
            **Package Size:** ${{ env.package_size }}
            
            ### üì¶ What's included:
            - Latest source code (all PHP files)
            - Configuration files
            - Database migrations
            - Public assets
            - Routes & Controllers
            
            ### ‚ö†Ô∏è Excluded (must configure manually):
            - `.env` file (configure on server)
            - `vendor/` folder (run composer install)
            - `storage/logs/` (will be created)
            - `node_modules/` (run npm install if needed)
            
            ### üîÑ Auto-Update Usage:
            1. Login to your server admin panel
            2. Go to `/auto-update` route
            3. System will automatically download and extract this package
            4. Done! ‚úÖ
            
            ### üìù Manual Update:
            ```bash
            # Download
            wget https://github.com/${{ github.repository }}/releases/download/latest/latest-update.zip
            
            # Extract
            unzip -o latest-update.zip -d /path/to/your/project
            
            # Set permissions
            chmod -R 755 storage bootstrap/cache
            chmod -R 777 storage/logs
            
            # Clear cache
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            ```
            
            ---
            
            **Commit Message:** ${{ github.event.head_commit.message }}
            **Author:** ${{ github.event.head_commit.author.name }}
            
          files: latest-update.zip
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Cleanup
        run: |
          rm -rf release-temp
          rm latest-update.zip

